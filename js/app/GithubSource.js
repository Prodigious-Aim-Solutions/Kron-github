// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['octokit', 'BlogPost'], function(Octokit, BlogPost) {
    var GithubSource;
    GithubSource = (function() {
      function GithubSource() {
        this.getAll = __bind(this.getAll, this);
        this.get = __bind(this.get, this);
        this.remove = __bind(this.remove, this);
        this.update = __bind(this.update, this);
        this.create = __bind(this.create, this);
        this.source = null;
        return this;
      }

      GithubSource.prototype.login = function(user, pass) {
        var repo;
        this.github = new Octokit({
          username: user,
          password: pass
        });
        repo = this.github.getRepo('Corbzilla', 'Corbzilla.github.io');
        return this.source = repo.getBranch();
      };

      GithubSource.prototype.create = function(item) {
        return this;
      };

      GithubSource.prototype.update = function(item) {
        return this;
      };

      GithubSource.prototype.remove = function(item) {
        return this;
      };

      GithubSource.prototype.get = function(item) {
        return this;
      };

      GithubSource.prototype.getAll = function() {
        var id;
        this.blogPosts = [];
        if (this.source != null) {
          id = 0;
          this.source.contents('posts/Corbzilla', false).done((function(_this) {
            return function(posts) {
              var post, title, _i, _len;
              for (_i = 0, _len = posts.length; _i < _len; _i++) {
                post = posts[_i];
                title = post.name.split('.')[0].split('-').join(' ');
                _this.source.read("posts/Corbzilla/" + post.name).done(function(file) {
                  _this.blogPosts.push(new BlogPost(id, title, file.contents, '', 'Corbzilla', 'today'));
                });
              }
            };
          })(this));
        }
        return this.blogPosts;
      };

      return GithubSource;

    })();
    return GithubSource;
  });

}).call(this);
