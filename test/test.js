// Generated by CoffeeScript 1.7.1
(function() {
  requirejs.config({
    baseUrl: '../js/app',
    paths: {
      octokit: '../../bower_components/octokit/octokit',
      underscore: '../../bower_components/underscore/underscore',
      jquery: '../../bower_components/jquery/dist/jquery',
      mocha: '../../bower_components/mocha/mocha',
      should: '../../bower_components/should/should'
    }
  });

  require(['should', 'main', 'editor', 'BlogPost', 'DataSource', 'signin', 'mocha'], function(Should, app, Editor, BlogPost, DataSource, SignIn) {
    mocha.setup('bdd');
    describe('App', function() {
      describe('Global App', function() {
        it('app should exist', function() {
          Should.exists(app);
        });
      });
      describe('Editor', function() {
        var editor;
        editor = new Editor();
        it('should exists', function() {
          Should.exist(editor);
        });
        it('should have a markdown editor', function() {
          Should.exist(editor.markdownEditor);
        });
      });
      describe('BlogPost', function() {
        var post;
        post = new BlogPost();
        it('should have an id', function() {
          Should.exists(post.id);
        });
        it('should have a title', function() {
          Should.exists(post.title);
        });
        it('should have a body', function() {
          Should.exists(post.body);
        });
        it('should have a tags', function() {
          Should.exists(post.tags);
        });
        it('should have an author', function() {
          Should.exists(post.author);
        });
        return it('should have a date', function() {
          Should.exists(post.date);
        });
      });
      describe('DataSource', function() {
        var ds;
        ds = new DataSource();
        it('should have a login method', function() {
          ds.should.have.ownProperty('login');
        });
        it('should have a create method', function() {
          ds.should.have.ownProperty('create');
        });
        it('should have an update method', function() {
          ds.should.have.ownProperty('update');
        });
        it('should have a remove method', function() {
          ds.should.have.ownProperty('remove');
        });
        return it('should have a get method', function() {
          ds.should.have.ownProperty('get');
        });
      });
      describe('SignIn', function() {
        var signin;
        signin = new SignIn();
        return it('should have a datasource', function() {
          return Should.exists(signin.ds);
        });
      });
    });
    mocha.run();
  });

}).call(this);
